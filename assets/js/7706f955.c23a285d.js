"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[741],{3905:function(e,a,t){t.d(a,{Zo:function(){return c},kt:function(){return m}});var n=t(7294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=n.createContext({}),l=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=l(e.components);return n.createElement(p.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(t),m=i,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||r;return t?n.createElement(h,o(o({ref:a},c),{},{components:t})):n.createElement(h,o({ref:a},c))}));function m(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=d;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3598:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var n=t(7462),i=t(3366),r=(t(7294),t(3905)),o=["components"],s={sidebar_position:20},p="Autenticazione e sicurezza",l={unversionedId:"autenticazione",id:"autenticazione",title:"Autenticazione e sicurezza",description:"Sicurezza",source:"@site/docs/autenticazione.md",sourceDirName:".",slug:"/autenticazione",permalink:"/docs/autenticazione",editUrl:"https://github.com/NaN-srl/docs/edit/main/docs/autenticazione.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Ambienti",permalink:"/docs/ambienti"},next:{title:"Liste e paginazione",permalink:"/docs/liste"}},c=[{value:"Sicurezza",id:"sicurezza",children:[{value:"Firma crittografica dei payload",id:"firma-crittografica-dei-payload",children:[],level:3}],level:2},{value:"Autenticazione",id:"autenticazione",children:[{value:"OAuth 2.0 e OpenID Connect",id:"oauth-20-e-openid-connect",children:[],level:3},{value:"API key",id:"api-key",children:[{value:"Senza chiave pubblica: header <code>X-API-Key</code>",id:"senza-chiave-pubblica-header-x-api-key",children:[],level:4},{value:"Con chiave pubblica: header <code>Authorization: Signature</code>",id:"con-chiave-pubblica-header-authorization-signature",children:[],level:4}],level:3}],level:2},{value:"Esempio di chiamata",id:"esempio-di-chiamata",children:[],level:2}],u={toc:c};function d(e){var a=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"autenticazione-e-sicurezza"},"Autenticazione e sicurezza"),(0,r.kt)("h2",{id:"sicurezza"},"Sicurezza"),(0,r.kt)("p",null,"Trattando dati estremamente sensibili, \xe8 consigliabile attuare misure di prevenzione pi\xf9 forti rispetto ad altri webservice."),(0,r.kt)("h3",{id:"firma-crittografica-dei-payload"},"Firma crittografica dei payload"),(0,r.kt)("p",null,"Tutte le risposte delle API REST sono firmate digitalmente, in modo che il client possa verificare che il payload ricevuto sia stato realmente generato da ContoAperto. La chiave pubblica \xe8 esposta direttamente sulle API, tramite una chiamata che non richiede autenticazione: ",(0,r.kt)("a",{parentName:"p",href:"https://api.dev.contoaperto.com/system/public-key"},(0,r.kt)("inlineCode",{parentName:"a"},"GET /system/public-key")),". L'header di risposta ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Signature")," contiene l'encoding Base64 della ",(0,r.kt)("strong",{parentName:"p"},"PKCS #1 v1.5 RSA digest signature con SHA256"),": per un'implementazione di esempio si veda ",(0,r.kt)("a",{parentName:"p",href:"#esempio-di-chiamata"},"l'esempio a fondo pagina"),"."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Questa funzionalit\xe0 al momento \xe8 implementata esclusivamente nelle risposte del server. Un omologo per le richieste \xe8 in via di sviluppo, in modo da integrarsi con l'autenticazione tramite ",(0,r.kt)("a",{parentName:"p",href:"#con-chiave-pubblica-header-authorization-signature"},"chiave crittografica personale")," e garantire ogni aspetto della richiesta."))),(0,r.kt)("h2",{id:"autenticazione"},"Autenticazione"),(0,r.kt)("p",null,"Le API REST sono pubblicamente raggiungibili, ma tranne poche inevitabili eccezioni sono sottoposte ad autenticazione. In base ai casi d'uso sono possibili tre differenti metodi di accesso."),(0,r.kt)("h3",{id:"oauth-20-e-openid-connect"},"OAuth 2.0 e OpenID Connect"),(0,r.kt)("p",null,"Per autorizzare accessi da parte degli utenti si consiglia di utilizzare i flussi ",(0,r.kt)("inlineCode",{parentName:"p"},"authorization_code")," o ",(0,r.kt)("inlineCode",{parentName:"p"},"implicit"),". Il servizio di autenticazione \xe8 conforme alle specifiche ",(0,r.kt)("em",{parentName:"p"},"OpenID Connect")," e un client adeguato potr\xe0 venire configurato in maniera automatica, tramite le istruzioni esposte all'indirizzo ",(0,r.kt)("a",{parentName:"p",href:"https://auth.contoaperto.com/auth/realms/ContoApertoDev/.well-known/openid-configuration"},".well-known/openid-configuration")," del reame di autenticazione."),(0,r.kt)("p",null,"Il servizio di autenticazione \xe8 basato su ",(0,r.kt)("a",{parentName:"p",href:"https://www.keycloak.org/"},"Keycloak"),", che fornisce varie ",(0,r.kt)("a",{parentName:"p",href:"https://www.keycloak.org/docs/latest/securing_apps/"},"librerie client")," per i principali linguaggi."),(0,r.kt)("p",null,"L'Access Token deve obbligatoriamente essere inviato tramite header di richiesta ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization: Bearer"),"; l'invio in query string, anche se permesso dal protocollo, non \xe8 volontariamente supportato."),(0,r.kt)("h3",{id:"api-key"},"API key"),(0,r.kt)("p",null,"Un utente pu\xf2 generare quante API Key desidera, tramite la chiamata ",(0,r.kt)("inlineCode",{parentName:"p"},"POST /user/api-key"),". Una API Key permette di agire in nome e per conto dell'utente, e pu\xf2 essere generata con uno ",(0,r.kt)("em",{parentName:"p"},"scope")," pari o inferiore a quello della richiesta di creazione. "),(0,r.kt)("p",null,"Un'API Key pu\xf2 opzionalmente essere arricchita con una chiave pubblica in formato PEM; la presenza o meno di questa informazione determina quale tipo di autenticazione occorrer\xe0 utilizzare per accedere al servizio."),(0,r.kt)("h4",{id:"senza-chiave-pubblica-header-x-api-key"},"Senza chiave pubblica: header ",(0,r.kt)("inlineCode",{parentName:"h4"},"X-API-Key")),(0,r.kt)("p",null,"Se non si \xe8 fornita una chiave pubblica, l'API key pu\xf2 essere utilizzata nella maniera pi\xf9 semplice; la chiave generata ha il campo ",(0,r.kt)("inlineCode",{parentName:"p"},"apikey")," valorizzato con una stringa alfanumerica di 52 caratteri, da inviare attraverso l'header ",(0,r.kt)("inlineCode",{parentName:"p"},"X-API-Key"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl -X 'GET' \\\n  'https://api.dev.contoaperto.com/user' \\\n  -H 'accept: application/json' \\\n  -H 'X-API-Key: 2KBAD2FFG45PKSGW0CC9QM3P1501FB453GDC7KD5H9DDBRNR7VGJ'\n")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Un'API key con annessa chiave pubblica ",(0,r.kt)("strong",{parentName:"p"},"non pu\xf2 essere utilizzata in questa modalit\xe0"),", e le chiamate risulteranno in un ",(0,r.kt)("inlineCode",{parentName:"p"},"401 Unauthorized"),"."))),(0,r.kt)("h4",{id:"con-chiave-pubblica-header-authorization-signature"},"Con chiave pubblica: header ",(0,r.kt)("inlineCode",{parentName:"h4"},"Authorization: Signature")),(0,r.kt)("p",null,"Se l'API key ha allegato una chiave pubblica deve obbligatoriamente essere utilizzata in questa modalit\xe0. Le RFC ufficiali non offrono ancora un metodo soddisfacente per firmare digitalmente le richieste HTTP, e quindi si \xe8 scelto di adottare un draft\normai ragionevolmente stabile: ",(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/draft-ietf-httpbis-message-signatures/"},"HTTP Message Signatures"),"; la sua implementazione Javascript di riferimento, ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/http-signature"},"http-signature"),", coi suoi 21 milioni di download alla settimana \xe8 indice di una discreta adozione del protocollo."),(0,r.kt)("p",null,"Le chiavi private e pubbliche devono venire generate autonomamente dall'implementatore, tramite questi comandi (o equivalenti):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# private key generation:\nopenssl req -newkey rsa:2048 -new -nodes -x509 -days 3650 -keyout key.pem -out cert.pem\n\n# public key generation\nopenssl rsa -in key.pem -pubout > key.pub\n")),(0,r.kt)("p",null,"L'eventuale rotazione delle chiavi deve ovviamente essere gestita autonomamente, poich\xe9 ContoAperto conosce esclusivamente la chiave pubblica."),(0,r.kt)("p",null,"La cifratura avviene utilizzando la chiave privata ",(0,r.kt)("inlineCode",{parentName:"p"},"key.pem")," e indicando come keyId il campo ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," dell'API key, una stringa alfanumerica di 26 caratteri. Gli algoritmi supportati per la creazione della signature sono ",(0,r.kt)("strong",{parentName:"p"},"rsa-sha1"),", ",(0,r.kt)("strong",{parentName:"p"},"rsa-sha256")," e ",(0,r.kt)("strong",{parentName:"p"},"rsa-sha512"),"."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Un'API key senza chiave pubblica ",(0,r.kt)("strong",{parentName:"p"},"non pu\xf2 essere utilizzata in questa modalit\xe0"),", e le chiamate risulteranno in un ",(0,r.kt)("inlineCode",{parentName:"p"},"401 Unauthorized"),"."))),(0,r.kt)("h2",{id:"esempio-di-chiamata"},"Esempio di chiamata"),(0,r.kt)("p",null,"Un'implementazione di esempio, in typescript, potrebbe quindi essere la seguente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="exampleCall.ts"',title:'"exampleCall.ts"'},"import crypto from 'crypto';\nimport fs from 'fs';\nimport httpSignature from 'http-signature';\nimport https from 'https';\n\nexport const verifySignature = (payload: string, base64signature: string) => {\n    const data = Buffer.from(payload);\n    const publicKey = fs.readFileSync('./contoaperto.pem', 'ascii');\n    const signature = Buffer.from(base64signature, 'base64');\n    return crypto.verify('RSA-SHA256', data, publicKey, signature);\n};\n\nconst req = https.request(\n    {\n        method: 'GET',\n        host: 'api.dev.contoaperto.com',\n        path: '/user',\n    },\n    (response) => {\n        let jsonResponse = '';\n        const signature = response.headers['x-signature'] as string;\n\n        response.on('data', (chunk) => {\n            jsonResponse += chunk;\n        });\n\n        response.on('end', () => {\n            const isValid = verifySignature(jsonResponse, signature);\n            console.log('Response analisys:', { jsonResponse, signature, isValid });\n        });\n    },\n);\n\nhttpSignature.sign(req, {\n    key: fs.readFileSync('./key.pem', 'ascii'),\n    keyId: '01FVD27F7HHRSK11XHNPQ4H2J5',\n});\n\nreq.end();\n")),(0,r.kt)("p",null,"Questo codice genera una chiamata che, tra i suoi header, ha: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Authorization: Signature keyId="01FVD27F7HHRSK11XHNPQ4H2J5",algorithm="rsa-sha256",signature="2yaZFoJbf/QxPLpQiACb3c7UQwiqRqXa4DS+PAf7v0Yuk8tra3oevMYmiiMMr+2mf37P9zqmwDLuEUSUekipao9QqV/cBZyHhZ5d7NcAA/94m5SrfB7mwAZ8YBTEK64izGYgFfQrzNygUsMu/QiYzpszT+ypbMg7AG7mu17wzKc7/1InuHk9aq9HftR+s0jQtoLkdeHyEnqG1wf2T3DET5hoaDSWVk+VmhhSFGG6uj59a2OI7xDvUxEiuYUIMJVJk73otT0XbBqVzEsUZ4c7ygyymj0sRT8V4jKcHLyENcpEnytD278eJESFXTkk8fa+2dLm+Wtj25zMjLFJAgKaqw=="\n')),(0,r.kt)("p",null,"Si noti che la signature varia di chiamata in chiamata, e pu\xf2 essere configurata in modo da avere una scadenza."),(0,r.kt)("p",null,"L'output a console sarebbe qualcosa di simile a questo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Response analisys: {\n  jsonResponse: \'{"id":"01FVAK8VQXTEQ6JES6P4E8A3QK","firstName":"Mario","lastName":"Rossi","email":"mario@test.com","phone":"+39399000000","language":"it"}\',\n  signature: \'JKvrt56axFApTBEbV2sdT1JGsCfHteMHjnDn7Xz7i77JOPpKgMAh5PzftdZ6yafDepDG+C1gf/+9xRMaXF498SCPRxYN4CA5AmocuK5/KjBA+432SkMnijt3TlrFEfyj1ZhuNK5VSTglrIQ60jsDpKFO7/tpyeXnUJXx1Fqo0tj4Np5GihIuphxa3l7JueRuKcKvuVcxEbosHQi1vKTt2GVUCU70+smZy1w0o2apxaIbfJ5nhZnX/4pv9kmYUeQhzeRphV8Fjt1srvDRzIBawsU2Q2wFA6Xx2ubGTTp0fdehgsS2q3tOQj7KLT7+o0X3GYSAl5BRCiswsZXu+aBudw==\',\n  isValid: true\n}\n')))}d.isMDXComponent=!0}}]);